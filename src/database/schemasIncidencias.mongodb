use('db_incidencias_campus')
db.createCollection('tipodocumento', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'Tipo Documento',
      required: ['id', 'nombre', 'abreviacion'],
      properties: {
        id: {
          bsonType: 'number',
          description: 'Id of tipo document'
        },
        nombre: {
          bsonType: 'string',
          maxLength: 150,
          description: 'Nombre de tipo document'
        },
        abreviacion: {
          bsonType: 'string',
          maxLength: 50,
          description: 'abreviacion de tipo document'
        }
      }
    }
  }
})

use('db_incidencias_campus')
db.createCollection('infoEmpresarial', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'Info Empresarial',
      required: ['id', 'emailCoor', 'telFijoCoor', 'telMovCoor'],
      properties: {
        id: {
          bsonType: 'number',
          description: 'Id del tipo document'
        },
        emailCoor: {
          bsonType: 'string',
          maxLength: 150,
          description: 'Email del tipo document'
        },
        telFijoCoor: {
          bsonType: 'string',
          maxLength: 150,
          description: 'Tel de tipo document'
        },
        telMovCoor: {
          bsonType: 'string',
          maxLength: 150,
          description: 'Tel de tipo document'
        }
      }

    }
  }
})

use('db_incidencias_campus')
db.createCollection('usuarios', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'usuarios',
      required: [
        'id',
        'nombre',
        'apellidos',
        'password',
        'doc_usuario',
        'tipoDocumento_id',
        'infoEmpresarial_id'
      ],
      properties: {
        id: { bsonType: 'number', description: 'id of the user' },
        nombre: {
          bsonType: 'string',
          maxLength: 150,
          description: 'nombre of the user'
        },
        apellidos: {
          bsonType: 'string',
          maxLength: 150,
          description: ' acellidos of the user'
        },
        password: {
          bsonType: 'string',
          maxLength: 150,
          description: 'password of the user'
        },
        doc_usuario: {
          bsonType: 'number',
          description: 'id of the docusuario'
        },
        tipoDocumento_id: {
          bsonType: 'number',
          description: 'id of the tipo document'
        },
        infoEmpresarial_id: {
          bsonType: 'number',
          description: 'id of the info'
        }
      }

    }
  }
})

use('db_incidencias_campus')
db.createCollection('lugares', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'Lugares',
      required: ['id', 'nombre', 'description'],
      properties: {
        id: { bsonType: 'number', description: 'id is requiered' },
        nombre: {
          bsonType: 'string',
          maxLength: 150,
          description: 'nombre is requiered'
        },
        description: {
          bsonType: 'string',
          maxLength: 255,
          description: 'description is requiered'
        }
      }
    }
  }
})

use('db_incidencias_campus')
db.createCollection('areas', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'areas',
      required: ['id', 'nombre', 'description'],
      properties: {
        id: { bsonType: 'number', description: 'id is required' },
        nombre: {
          bsonType: 'string',
          maxLength: 150,
          description: 'nombre is required'
        },
        description: {
          bsonType: 'string',
          maxLength: 255,
          description: 'description is required'
        }
      }
    }
  }
})

use('db_incidencias_campus')
db.createCollection('lugares_areas', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'lugares_areas',
      required: ['lugar_id', 'area_id'],
      properties: {
        lugar_id: { bsonType: 'number', description: 'lugar_id is required' },
        area_id: { bsonType: 'number', description: 'area_id is required' }
      }
    }
  }
})

use('db_incidencias_campus')
db.createCollection('usuarios_lugares', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'usuarios_lugares',
      required: ['lugares_id', 'usuarios_id'],
      properties: {
        lugares_id: {
          bsonType: 'number',
          description: 'lugares_id is required'
        },
        usuarios_id: {
          bsonType: 'number',
          description: 'usuarios_id is required'
        }
      }
    }
  }
})

use('db_incidencias_campus')
db.createCollection('equipos', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'equipos',
      required: ['id', 'nombre', 'description', 'lugar_id'],
      properties: {
        id: { bsonType: 'number', description: 'id is required' },
        nombre: {
          bsonType: 'string',
          maxLength: 150,
          description: 'nombre is required'
        },
        description: {
          bsonType: 'string',
          maxLength: 255,
          description: 'description is required'
        },
        lugar_id: { bsonType: 'number', description: 'lugar_id is required' }
      }
    }
  }
})

use('db_incidencias_campus')
db.createCollection('accesorio_teclado', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'accesorio_teclado',
      required: ['id', 'marca', 'description'],
      properties: {
        id: { bsonType: 'number', description: 'id is required' },
        marca: {
          bsonType: 'string',
          maxLength: 150,
          description: 'marca is required'
        },
        description: {
          bsonType: 'string',
          maxLength: 255,
          description: 'description is required'
        }
      }
    }
  }
})

use('db_incidencias_campus')
db.createCollection('accesorio_mouse', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'accesorio_mouse',
      required: ['id', 'marca', 'description'],
      properties: {
        id: { bsonType: 'number', description: 'id is required' },
        marca: {
          bsonType: 'string',
          maxLength: 150,
          description: 'marca is required'
        },
        description: {
          bsonType: 'string',
          maxLength: 255,
          description: 'description is required'
        }
      }
    }
  }
})

use('db_incidencias_campus')
db.createCollection('accesorio_diademas', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'accesorio_diademas',
      required: ['id', 'marca', 'description'],
      properties: {
        id: { bsonType: 'number', description: 'id is required' },
        marca: {
          bsonType: 'string',
          maxLength: 150,
          description: 'marca is required'
        },
        description: {
          bsonType: 'string',
          maxLength: 255,
          description: 'description is required'
        }
      }
    }
  }
})

use('db_incidencias_campus')
db.createCollection('equipos_acc_lugar', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'equipos_acc_lugar',
      required: [
        'equipos_id',
        'accesorios_mouse_id',
        'accesorios_teclado_id',
        'accesorios_diademas_id'
      ],
      properties: {
        equipos_id: {
          bsonType: 'number',
          description: 'equipos_id is required'
        },
        accesorios_mouse_id: {
          bsonType: 'int',
          description: 'accesorios_mouse_id is required'
        },
        accesorios_teclado_id: {
          bsonType: 'number',
          description: 'accesorios_teclado_id is required'
        },
        accesorios_diademas_id: {
          bsonType: 'number',
          description: 'accesorios_diademas_id is required'
        }
      }
    }
  }
})

use('db_incidencias_campus')
db.createCollection('incidencia_categoria', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'insidencia_categoria',
      required: ['id', 'nombre', 'descripcion'],
      properties: {
        id: { bsonType: 'number', description: 'id is required' },
        nombre: {
          bsonType: 'string',
          maxLength: 150,
          description: 'nombre is required'
        },
        descripcion: {
          bsonType: 'string',
          maxLength: 255,
          description: 'descripcion is required'
        }
      }
    }
  }
})

use('db_incidencias_campus')
db.createCollection('incidencia_nivel', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'insidencia_nivel',
      required: ['id', 'nombre'],
      properties: {
        id: { bsonType: 'number', description: 'id is required' },
        nombre: {
          bsonType: 'string',
          maxLength: 150,
          description: 'nombre is required'
        }
      }
    }
  }
})

use('db_incidencias_campus')
db.createCollection('incidencias', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'insidencias',
      required: [
        'id',
        'nombre',
        'descripcion',
        'equipo_id',
        'lugar_id',
        'fecha',
        'nivel_id',
        'categoria_id'
      ],
      properties: {
        id: { bsonType: 'number', description: 'id is required' },
        nombre: {
          bsonType: 'string',
          maxLength: 150,
          description: 'nombre is required'
        },
        descripcion: {
          bsonType: 'string',
          maxLength: 255,
          description: 'descripcion is required'
        },
        equipo_id: { bsonType: 'number', description: 'equipo_id is required' },
        lugar_id: { bsonType: 'number', description: 'lugar_id is required' },
        fecha: { bsonType: 'date', description: 'fecha is required' },
        nivel_id: { bsonType: 'number', description: 'nivel_id is required' },
        categoria_id: {
          bsonType: 'number',
          description: 'categoria_id is required'
        }
      }
    }
  }
})

use('db_incidencias_campus')
db.createCollection('Historial_incidencia_usuarios', {
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      title: 'Historial_insidencia_usuarios',
      required: ['usuario_id', 'insidencia_id'],
      properties: {
        usuario_id: { bsonType: 'number', description: 'usuario_id is required' },
        insidencia_id: {
          bsonType: 'number',
          description: 'insidencia_id is required'
        }
      }
    }
  }
})

use('db_incidencias_campus')

db.incidencia_nivel.insertMany([
  { id: 1, nombre: 'level' },
  { id: 2, nombre: 'moderada' },
  { id: 3, nombre: 'critica' }
])

use('db_incidencias_campus')
db.incidencia_categoria.insertMany([
  {
    id: 1,
    nombre: 'software',
    descripcion: 'Todo lo relacionado con los dispositivos externos'
  },
  {
    id: 2,
    nombre: 'hardware',
    descripcion: 'todo lo relacionado con la parte interna, es decir, sistema operativo, programas'
  }
])

use('db_incidencias_campus')

db.tipodocumento.insertMany([
  { id: 1, nombre: 'Cedula de ciudadania', abreviacion: 'CC' },
  { id: 2, nombre: 'Tarjeta de identidad', abreviacion: 'TI' },
  { id: 3, nombre: 'Pasaporte', abreviacion: 'PS' },
  { id: 4, nombre: 'Cedula de Extranjera', abreviacion: 'CE' }
])

use('db_incidencias_campus')

db.lugares.insertMany([
  { id: 1, nombre: 'Apolo', description: 'Salon de clase principiantes' },
  { id: 2, nombre: 'Artemis', description: 'Salon de clase intermedios' },
  { id: 3, nombre: 'Sputnik', description: 'Salon de clase Avanzados' },
  {
    id: 4,
    nombre: 'skylab',
    description: 'Area de aprendizaje autonomo'
  },
  {
    id: 5,
    nombre: 'corvus',
    description: 'Area de aprendizaje autonomo'
  },
  {
    id: 6,
    nombre: 'endor',
    description: 'Area de aprendizaje autonomo'
  }
])

use('db_incidencias_campus')
db.areas.insertMany([
  {
    id: 1,
    nombre: 'training',
    description:
      'Salones de clases, son el area donde los trainer pueden dar clases'
  },
  {
    id: 2,
    nombre: 'review_1',
    description: 'Salones para el aprendiza autonomo'
  },
  {
    id: 3,
    nombre: 'review_2',
    description: 'Salones para el aprendiza autonomo'
  }
])

use('db_incidencias_campus')
db.lugares_areas.insertMany([
  { id: 1, lugar_id: 1, area_id: 1 },
  { id: 2, lugar_id: 2, area_id: 1 },
  { id: 3, lugar_id: 3, area_id: 1 },
  { id: 4, lugar_id: 4, area_id: 1 },
  { id: 5, lugar_id: 5, area_id: 2 },
  { id: 6, lugar_id: 6, area_id: 3 }
])

use('db_incidencias_campus')

db.accesorio_mouse.insertMany([
  { id: 1, marca: 'Logitech', description: 'Mouse Logitech', serial: '123456' },
  {
    id: 2,
    marca: 'Logitech',
    description: 'Mouse Logitech',
    serial: '123asdw'
  },
  { id: 3, marca: 'Acer', description: 'Mouse Acer', serial: '123cw23' },
  { id: 4, marca: 'Compumax', description: 'Mouse Compumax', serial: '12we56' }
])

use('db_incidencias_campus')

db.accesorio_teclado.insertMany([
  {
    id: 1,
    marca: 'Logitech',
    description: 'Teclado Logitech',
    serial: '124426'
  },
  {
    id: 2,
    marca: 'Logitech',
    description: 'Teclado Logitech',
    serial: '123as4w'
  },
  { id: 3, marca: 'Acer', description: 'Teclado Acer', serial: '123cqww3' },
  {
    id: 4,
    marca: 'Compumax',
    description: 'Teclado Compumax',
    serial: 'eq2123'
  }
])

use('db_incidencias_campus')

db.accesorio_diademas.insertMany([
  {
    id: 1,
    marca: 'Logitech',
    description: 'Diademas Logitech'
  },
  {
    id: 2,
    marca: 'Logitech',
    description: 'Diademas Logitech',
    serial: '123as4w'
  },
  { id: 3, marca: 'Acer', description: 'Diademas Acer' },
  {
    id: 4,
    marca: 'Compumax',
    description: 'Diademas Compumax'
  }
])

use('db_incidencias_campus')

db.equipos.insertMany([
  {
    id: 1,
    nombre: 'J-50',
    description: 'Equipo en perfecto estado',
    lugar_id: 1
  },
  {
    id: 2,
    nombre: 'J-32',
    description: 'Equipo en perfecto estado',
    lugar_id: 1
  },
  {
    id: 3,
    nombre: 'J-44',
    description: 'Equipo en perfecto estado',
    lugar_id: 2
  },
  {
    id: 4,
    nombre: 'J-15',
    description: 'Equipo en perfecto estado',
    lugar_id: 2
  }
])

use('db_incidencias_campus')

db.equipos_acc_lugar.insertMany([
  {
    id: 1,
    equipos_id: 1,
    accesorios_mouse_id: 1,
    accesorios_teclado_id: 1,
    accesorios_diademas_id: 1
  },
  {
    id: 2,
    equipos_id: 2,
    accesorios_mouse_id: 2,
    accesorios_teclado_id: 2,
    accesorios_diademas_id: 2
  },
  {
    id: 3,
    equipos_id: 3,
    accesorios_mouse_id: 3,
    accesorios_teclado_id: 3,
    accesorios_diademas_id: 3
  },
  {
    id: 4,
    equipos_id: 4,
    accesorios_mouse_id: 4,
    accesorios_teclado_id: 4,
    accesorios_diademas_id: 4
  }
])

use('db_incidencias_campus')
db.infoempresarial.insertMany([
  {
    id: 1,
    emailCoor: 'vermen@campuslands.com',
    telFijoCoor: '6785868',
    telMovCoor: '+579317458962'
  }
])

use('db_incidencias_campus')
db.usuarios.insertMany([
  {
    id: 1,
    nombre: 'juan',
    apellidos: 'sanchez',
    password: '12345',
    doc_usuario: 12324,
    tipoDocumento_id: 1,
    infoEmpresarial_id: 1,
    telefono: '+1658742',
    movile: '+5734158924',
    email: 'devjgi@gmail.com'
  },
  {
    id: 2,
    nombre: 'David',
    apellidos: 'sanchez',
    password: '12345',
    doc_usuario: 12324,
    tipoDocumento_id: 1,
    infoEmpresarial_id: 1,
    telefono: '+1658742',
    movile: '+5734158924',
    email: 'devjgi@gmail.com'
  }
])

use('db_incidencias_campus')
db.usuarios_lugares.insertMany([{ id: 1, lugares_id: 1, usuarios_id: 1 }])

use('db_incidencias_campus')
db.incidencias.insertMany([
  {
    id: 1,
    nombre: 'No enciende',
    descripcion:
      'El camper Juan, intento prender el pc y no le funciona, hace la notificacion y se comprueba la incidencia',
    equipo_id: 1,
    lugar_id: 1,
    fecha: new Date('2023-07-15'),
    nivel_id: 3,
    categoria_id: 1
  },
  {
    id: 2,
    nombre: 'Falta mouse',
    descripcion:
      'El camper David, reporta falta de mouse',
    equipo_id: 2,
    lugar_id: 1,
    fecha: new Date('2023-07-15'),
    nivel_id: 2,
    categoria_id: 2
  }
])

use('db_incidencias_campus')
db.historial_incidencia_usuarios.insertMany([
  { id: 1, usuario_id: 1, insidencia_id: 1 }, { id: 2, usuario_id: 2, insidencia_id: 2 }
])
